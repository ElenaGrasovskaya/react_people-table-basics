{"version":3,"sources":["App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","App","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PersonRow","people","motherLink","find","el","motherName","fatherLink","fatherName","useParams","born","died","PeopleTable","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","getData","data","useEffect","length","Root","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.16e5f625.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\nimport cn from 'classnames';\n\nconst getLinkClass = ({ isActive }:\n{ isActive: boolean }) => cn('navbar-item',\n  { 'has-background-grey-lighter': isActive });\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={getLinkClass} to=\"/people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n  people: Person[];\n}\n\nexport const PersonRow: React.FC<Props> = ({ person, people }) => {\n  const motherLink = people.find((el) => el.name === person.motherName);\n  const fatherLink = people.find((el) => el.name === person.fatherName);\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': person.slug === slug })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {/* eslint-disable */}\n        {person.motherName ? (\n          motherLink ? (\n            <PersonLink person={motherLink} />\n          ) : (\n            person.motherName\n          )\n        ) : (\n          '-'\n        )}\n      </td>\n\n      <td>\n        {person.fatherName ? (\n          fatherLink ? (\n            <PersonLink person={fatherLink} />\n          ) : (\n            person.fatherName\n          )\n        ) : (\n          '-'\n        )}\n        {/* eslint-enable */}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonRow } from '../PersonRow';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable:React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonRow person={person} people={people} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const getData = async () => {\n    setIsLoading(true);\n    try {\n      const data = await getPeople();\n\n      setPeople(data);\n    } catch {\n      setError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {/* eslint-disable */}\n          {isLoading ? (\n            <Loader />\n          ) : people.length === 0 ? (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          ) : (\n            <PeopleTable people={people} />\n          )}\n          {/* eslint-enable */}\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace={false} />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n        <Route path=\"/people/:slug\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}